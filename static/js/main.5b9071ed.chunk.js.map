{"version":3,"sources":["redux/actions/index.js","redux/actions/textActions.js","utilities/textFormat.js","components/editor/Editor.jsx","components/homepage/Homepage.jsx","components/json/JsonViewer.jsx","components/xml/XMLViewer.jsx","components/visualize/Visualize.jsx","components/utilitypage/UtilitiesPage.jsx","App.js","serviceWorker.js","redux/reducers/textReducer.js","redux/reducers/index.js","redux/reducers/jsonReducer.js","index.js","redux/configureStore.js"],"names":["ACTIONS","SET_CURRENT_TEXT","SET_JSON1","SET_EDITOR_TEXT","setCurrentText","current","type","FORMAT","getTextFormat","text","trim","startsWith","JSON","parse","connect","state","texts","dispatch","useState","editor","setState","handleClick","e","format","onSubmit","fontSize","onChange","target","value","defaultValue","rows","size","onClick","Homepage","props","alignContent","textAlign","width","variant","display","JsonViewer","showQuery","src","query","result","jsonpath","placeholder","theme","onEdit","onAdd","onDelete","name","collapsed","displayDataTypes","mx","XMLView","namespace","xpath","evaluateXpath","xpathText","namespaceText","select","namespaces","split","namespaceObj","index","length","element","useNamespaces","dom","parseFromString","console","log","Error","map","s","toString","join","XPathResult","STRING_TYPE","mode","showPrintMargin","showGutter","highlightActiveLine","setOptions","showLineNumbers","tabSize","VisualizeView","alignSelf","alignItems","XMLViewer","mt","history","t","i","key","Utilities","Editor","component","Visualize","Compare","Manipulate","About","UtilitiesPage","option","setstate","m","as","px","Object","getOwnPropertyNames","u","bordered","button","borderRadius","xs","sm","md","lg","xl","space","breakpoints","ix","xxl","fontSizes","App","className","Boolean","window","location","hostname","match","initialText","initialState","rootReducer","combineReducers","jsons","json1","json2","action","json","slice","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducers","applyMiddleware","reduxImmutableStateInvariant","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5b9071ed.chunk.js","sourcesContent":["const ACTIONS = {\r\n  SET_CURRENT_TEXT: \"SET_CURRENT_TEXT\",\r\n  SET_JSON1: \"SET_JSON1\",\r\n  SET_EDITOR_TEXT: \"SET_EDITOR_TEXT\",\r\n};\r\n\r\nexport default ACTIONS;\r\n","import ACTIONS from \"./index\";\r\n\r\nexport function setCurrentText(current) {\r\n  return { type: ACTIONS.SET_CURRENT_TEXT, current };\r\n}\r\n\r\nexport function setEditorText(text) {\r\n  return { type: ACTIONS.SET_EDITOR_TEXT, text };\r\n}\r\n","export const FORMAT = {\r\n  JSON: \"json\",\r\n  XML: \"xml\",\r\n  YAML: \"yaml\",\r\n  PLAIN_TEXT: \"text\",\r\n};\r\n\r\nexport function getTextFormat(text) {\r\n  if (text) {\r\n    if (text.trim().startsWith(\"<\")) {\r\n      return FORMAT.XML;\r\n    }\r\n\r\n    try {\r\n      JSON.parse(text);\r\n      return FORMAT.JSON;\r\n    } catch {}\r\n  }\r\n\r\n  return FORMAT.PLAIN_TEXT;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { setCurrentText, setEditorText } from \"../../redux/actions/textActions\";\r\nimport { getTextFormat } from \"../../utilities/textFormat\";\r\nimport Textarea from \"styled-minimal/Textarea\";\r\nimport Button from \"styled-minimal/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport Form from \"styled-minimal/Form\";\r\n\r\nfunction Editor({ dispatch, texts }) {\r\n  const [state, setState] = useState({ text: texts.editor });\r\n\r\n  const handleClick = (e) => {\r\n    dispatch(\r\n      setCurrentText({ text: state.text, format: getTextFormat(state.text) })\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setState({ ...state, text: e.target.value });\r\n    dispatch(setEditorText(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleClick} fontSize={0}>\r\n        <Textarea\r\n          onChange={handleChange}\r\n          defaultValue={texts.editor}\r\n          rows={20}\r\n          size=\"sm\"\r\n        ></Textarea>\r\n        <Button onClick={handleClick}>Load Text</Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    texts: state.texts,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Editor);\r\n","import React from \"react\";\r\nimport Alert from \"styled-minimal/Alert\";\r\nimport Box from \"styled-minimal/Box\";\r\nimport Paragraph from \"styled-minimal/Paragraph\";\r\n\r\nfunction Homepage(props) {\r\n  return (\r\n    <Box alignContent={\"center\"} textAlign={\"center\"} width={0.8}>\r\n      <Alert\r\n        size=\"lg\"\r\n        width={0.8}\r\n        variant={\"secondary\"}\r\n        textAlign=\"left\"\r\n        display={\"inline-block\"}\r\n      >\r\n        <Paragraph>\r\n          Lots of time during software development we have to visualize,\r\n          manipulate or query different kinds of structured data.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          But, finding the tools which are approved to use inside a corporate\r\n          organisation is a pain.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          A valid concern of the organisation is data security. When you use an\r\n          online tool, there is always a concern that the site may send data out\r\n          of the browser to the server in the background.\r\n        </Paragraph>\r\n        <Paragraph size={\"lg\"}>\r\n          To make sure this set of utilities in this site doesn't send anything\r\n          to a server, this is hosted as a github.io site, which doesn't host\r\n          any server for processing requests.\r\n        </Paragraph>\r\n        <Paragraph>\r\n          As it only serves static files from a repo, this can assure that the\r\n          data is safe and doesn't leave your browser.\r\n        </Paragraph>\r\n      </Alert>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import jsonpath from \"jsonpath\";\r\nimport React, { useState } from \"react\";\r\nimport ReactJson from \"react-json-view\";\r\nimport Box from \"styled-minimal/Box\";\r\nimport Flex from \"styled-minimal/Flex\";\r\nimport Input from \"styled-minimal/Input\";\r\n\r\nfunction JsonViewer({ text, showQuery }) {\r\n  const src = JSON.parse(text);\r\n  const [state, setState] = useState({ query: \"$\", result: src });\r\n\r\n  const handleChange = (e) => {\r\n    let result = [];\r\n    try {\r\n      result = jsonpath.query(src, e.target.value);\r\n    } catch {}\r\n    setState({\r\n      query: e.target.value,\r\n      result,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showQuery && (\r\n        <Input\r\n          size={\"xm\"}\r\n          defaultValue={state.query}\r\n          onChange={handleChange}\r\n          placeholder=\"query\"\r\n        ></Input>\r\n      )}\r\n\r\n      <Flex>\r\n        <Box width={1 / (showQuery ? 2 : 1)}>\r\n          <ReactJson\r\n            theme=\"monokai\"\r\n            src={src}\r\n            onEdit={() => true}\r\n            onAdd={() => true}\r\n            onDelete={() => true}\r\n            name={false}\r\n            collapsed={showQuery ? 3 : 1}\r\n            displayDataTypes={false}\r\n          ></ReactJson>\r\n        </Box>\r\n        <Box mx={1}></Box>\r\n        {showQuery && (\r\n          <Box width={1 / 2}>\r\n            <ReactJson\r\n              theme=\"monokai\"\r\n              src={state.result}\r\n              onEdit={() => true}\r\n              onAdd={() => true}\r\n              onDelete={() => true}\r\n              name={false}\r\n              displayDataTypes={false}\r\n            ></ReactJson>\r\n          </Box>\r\n        )}\r\n      </Flex>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default JsonViewer;\r\n","import React, { useState } from \"react\";\r\nimport Box from \"styled-minimal/Box\";\r\nimport Flex from \"styled-minimal/Flex\";\r\nimport Input from \"styled-minimal/Input\";\r\nimport { DOMParser as dom } from \"xmldom\";\r\nimport xpath from \"xpath\";\r\nimport AceEditor from \"react-ace\";\r\n\r\nimport \"ace-builds/src-noconflict/mode-xml\";\r\nimport \"ace-builds/src-noconflict/theme-monokai\";\r\nimport \"ace-builds/src-noconflict/snippets/xml\";\r\nimport \"ace-builds/webpack-resolver\";\r\n// import \"ace-builds/webpack-resolver\";\r\n\r\nfunction XMLView({ text, showQuery }) {\r\n  const [state, setState] = useState({\r\n    namespace: \"\",\r\n    xpath: \".\",\r\n    result: text,\r\n  });\r\n\r\n  const evaluateXpath = (xpathText, namespaceText) => {\r\n    let select = xpath.select;\r\n    if (namespaceText !== \"\") {\r\n      const namespaces = namespaceText.split(\",\");\r\n      const namespaceObj = {};\r\n      for (let index = 0; index < namespaces.length; index++) {\r\n        const element = namespaces[index];\r\n        namespaceObj[element.split(\"=\")[0]] = element.split(\"=\")[1];\r\n      }\r\n\r\n      select = xpath.useNamespaces(namespaceObj);\r\n\r\n      const result = select(xpathText, new dom().parseFromString(text));\r\n      console.log(result);\r\n      if (result.length === 0) {\r\n        throw new Error(\"test\");\r\n      }\r\n      return result.map((s) => s.toString()).join(\"\\n\");\r\n    }\r\n\r\n    const result = select(\r\n      xpathText,\r\n      new dom().parseFromString(text),\r\n      null, // namespaceResolver\r\n      xpath.XPathResult.STRING_TYPE, // resultType\r\n      null\r\n    );\r\n    console.log(result);\r\n    if (result.length === 0) {\r\n      throw new Error(\"test\");\r\n    }\r\n    return result.map((s) => s.toString()).join(\"\\n\");\r\n  };\r\n\r\n  const setNamespace = (e) => {\r\n    let result = state.result;\r\n    try {\r\n      result = evaluateXpath(state.xpath, e.target.value);\r\n    } catch {}\r\n    setState({\r\n      ...state,\r\n      namespace: e.target.value,\r\n      result,\r\n    });\r\n  };\r\n\r\n  const setXpath = (e) => {\r\n    let result = state.result;\r\n    try {\r\n      result = evaluateXpath(e.target.value, state.namespace);\r\n    } catch {}\r\n\r\n    setState({\r\n      ...state,\r\n      xpath: e.target.value,\r\n      result,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showQuery && (\r\n        <Flex>\r\n          <Input size={\"sm\"} onChange={setXpath} placeholder=\"xpath\"></Input>\r\n          <Input\r\n            size={\"sm\"}\r\n            onChange={setNamespace}\r\n            placeholder=\"namespace serparated by comma\"\r\n          ></Input>\r\n        </Flex>\r\n      )}\r\n      <Flex>\r\n        {/* onLoad={this.onLoad}\r\nonChange={this.onChange} */}\r\n        <Box width={1 / (showQuery ? 2 : 1)}>\r\n          <AceEditor\r\n            placeholder=\"XML\"\r\n            mode=\"xml\"\r\n            theme=\"monokai\"\r\n            name=\"blah2\"\r\n            fontSize={14}\r\n            showPrintMargin={true}\r\n            showGutter={true}\r\n            highlightActiveLine={true}\r\n            value={text}\r\n            width={\"100%\"}\r\n            setOptions={{\r\n              showLineNumbers: true,\r\n              tabSize: 2,\r\n            }}\r\n          />\r\n\r\n          {/* <XMLViewer xml={text} />               //   onLoad={this.onLoad}\r\n              //   onChange={this.onChange} */}\r\n        </Box>\r\n        {showQuery && (\r\n          <Box width={1 / 2}>\r\n            <AceEditor\r\n              placeholder=\"XML\"\r\n              mode=\"xml\"\r\n              theme=\"monokai\"\r\n              name=\"blah2\"\r\n              fontSize={14}\r\n              showPrintMargin={true}\r\n              showGutter={true}\r\n              highlightActiveLine={true}\r\n              value={state.result + \"\"}\r\n              width={\"100%\"}\r\n              setOptions={{\r\n                showLineNumbers: true,\r\n                tabSize: 2,\r\n              }}\r\n            />\r\n            {/* <XMLViewer xml={state.result + \"\"} /> */}\r\n          </Box>\r\n        )}\r\n      </Flex>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default XMLView;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Box from \"styled-minimal/Box\";\r\nimport Button from \"styled-minimal/Button\";\r\nimport Flex from \"styled-minimal/Flex\";\r\nimport { setCurrentText } from \"../../redux/actions/textActions\";\r\nimport { FORMAT } from \"../../utilities/textFormat\";\r\nimport JsonViewer from \"../json/JsonViewer\";\r\nimport XMLViewer from \"../xml/XMLViewer\";\r\nimport Text from \"styled-minimal/Text\";\r\n\r\nfunction Visualize({ dispatch, texts }) {\r\n  return (\r\n    <>\r\n      <VisualizeView current={texts.current} showQuery></VisualizeView>\r\n      <Box mt={50}></Box>\r\n      <Text fontSize={2}>History</Text>\r\n      {texts.history.map((t, i) => (\r\n        <Flex key={i}>\r\n          <Button onClick={() => dispatch(setCurrentText(t))} size={\"xs\"}>\r\n            Load {i + 1}\r\n          </Button>{\" \"}\r\n          <VisualizeView current={t}></VisualizeView>{\" \"}\r\n        </Flex>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nfunction VisualizeView({ current, showQuery }) {\r\n  return (\r\n    <Box alignSelf=\"left\" alignItems=\"left\" alignContent=\"0\">\r\n      {current.format === FORMAT.JSON && (\r\n        <JsonViewer text={current.text} showQuery={showQuery}></JsonViewer>\r\n      )}\r\n      {current.format === FORMAT.XML && (\r\n        <XMLViewer text={current.text} showQuery={showQuery}></XMLViewer>\r\n      )}\r\n      {current.format === FORMAT.PLAIN_TEXT && <Box>{current.text}</Box>}\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    texts: state.texts,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Visualize);\r\n","import React, { useState } from \"react\";\r\nimport Box from \"styled-minimal/Box\";\r\nimport Button from \"styled-minimal/Button\";\r\nimport ButtonGroup from \"styled-minimal/ButtonGroup\";\r\nimport Flex from \"styled-minimal/Flex\";\r\nimport Heading from \"styled-minimal/Heading\";\r\nimport Editor from \"../editor/Editor\";\r\nimport Homepage from \"../homepage/Homepage\";\r\nimport Visualize from \"../visualize/Visualize\";\r\n\r\nconst Utilities = {\r\n  Editor: {\r\n    component: <Editor></Editor>,\r\n  },\r\n  Visualize: {\r\n    component: <Visualize></Visualize>,\r\n  },\r\n  Compare: {\r\n    component: <div>Coming Soon...</div>,\r\n  },\r\n  Manipulate: {\r\n    component: <div>Coming Soon...</div>,\r\n  },\r\n  About: {\r\n    component: <Homepage></Homepage>,\r\n  },\r\n};\r\n\r\nfunction UtilitiesPage(props) {\r\n  const [state, setstate] = useState({ option: \"Editor\" });\r\n\r\n  const handleClick = (option) => {\r\n    setstate({ ...state, option: option });\r\n  };\r\n\r\n  return (\r\n    <Box m={3}>\r\n      <Heading as=\"h4\">\r\n        <Flex>\r\n          <Box>Text Utilites</Box>\r\n\r\n          <ButtonGroup px={50}>\r\n            {Object.getOwnPropertyNames(Utilities).map((u) => {\r\n              return (\r\n                <Button\r\n                  key={u}\r\n                  onClick={() => handleClick(u)}\r\n                  bordered={state.option === u}\r\n                  size={\"sm\"}\r\n                >\r\n                  {u}\r\n                </Button>\r\n              );\r\n            })}\r\n          </ButtonGroup>\r\n        </Flex>\r\n      </Heading>\r\n\r\n      <Box textAlign=\"left\" mt={20}>\r\n        {Utilities[state.option].component}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default UtilitiesPage;\r\n","import React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport Box from \"styled-minimal/Box\";\nimport \"./App.css\";\nimport UtilitiesPage from \"./components/utilitypage/UtilitiesPage\";\n\nconst theme = {\n  button: {\n    borderRadius: {\n      xs: \"2px\",\n      sm: \"3px\",\n      md: \"4px\",\n      lg: \"6px\",\n      xl: \"8px\",\n    },\n  },\n  space: [0, 4, 8, 12, 16, 24, 32, 64, 128],\n  breakpoints: {\n    xs: 0,\n    ix: 400,\n    md: 768,\n    lg: 1024,\n    xl: 1360,\n    xxl: 1920,\n  },\n  fontSizes: [12, 14, 16, 18, 22, 26, 32, 48],\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <Box fontSize={1}>\n          <UtilitiesPage></UtilitiesPage>\n        </Box>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import ACTIONS from \"./../actions\";\r\nimport { getTextFormat } from \"../../utilities/textFormat\";\r\n\r\nconst initialText = \"<book><title>Harry Potter</title></book>\";\r\n\r\nconst current = { text: initialText, format: getTextFormat(initialText) };\r\nconst initialState = { current, history: [], editor: current.text };\r\n\r\nexport default function textReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ACTIONS.SET_CURRENT_TEXT:\r\n      const current = action.current;\r\n      return {\r\n        ...state,\r\n        current: current,\r\n        editor: current.text,\r\n        history: [current, ...state.history].slice(-10),\r\n      };\r\n    case ACTIONS.SET_EDITOR_TEXT:\r\n      return {\r\n        ...state,\r\n        editor: action.text,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport jsons from \"./jsonReducer\";\r\nimport texts from \"./textReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  jsons,\r\n  texts,\r\n});\r\n\r\nexport default rootReducer;\r\n","import ACTIONS from \"../actions\";\r\n\r\nexport default function jsonReducer(\r\n  state = { json1: \"{}\", json2: \"{}\" },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ACTIONS.SET_JSON1:\r\n      return { ...state, json1: action.json };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport configureStore from \"./redux/configureStore\";\nimport { Provider as ReduxProvider } from \"react-redux\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ReduxProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducers from \"./reducers\";\r\nimport reduxImmutableStateInvariant from \"redux-immutable-state-invariant\";\r\n\r\nexport default function configureStore(initialState) {\r\n  const composeEnhancers =\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //add support for Redux dev tools\r\n  return createStore(\r\n    rootReducers,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(reduxImmutableStateInvariant()))\r\n  );\r\n}\r\n"],"sourceRoot":""}